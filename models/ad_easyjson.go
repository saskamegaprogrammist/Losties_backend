// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels(in *jlexer.Lexer, out *Ads) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(Ads, 0, 1)
			} else {
				*out = Ads{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 Ad
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels(out *jwriter.Writer, in Ads) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v Ads) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ads) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ads) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ads) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels(l, v)
}
func easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels1(in *jlexer.Lexer, out *Ad) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int(in.Int())
		case "userid":
			out.UserId = int(in.Int())
		case "type":
			out.Type = int(in.Int())
		case "comments":
			out.Comments = int(in.Int())
		case "title":
			out.Title = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "time":
			out.Time = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Date).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels1(out *jwriter.Writer, in Ad) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Id))
	}
	{
		const prefix string = ",\"userid\":"
		out.RawString(prefix)
		out.Int(int(in.UserId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.Int(int(in.Type))
	}
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix)
		out.Int(int(in.Comments))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"time\":"
		out.RawString(prefix)
		out.String(string(in.Time))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"date\":"
		out.RawString(prefix)
		out.Raw((in.Date).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Ad) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Ad) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cbde9bEncodeGithubComSaskamegaprogrammistLostiesBackendModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Ad) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Ad) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cbde9bDecodeGithubComSaskamegaprogrammistLostiesBackendModels1(l, v)
}
